{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","quary","setQuary","_useState5","_useState6","error","setError","_useState7","_useState8","loading","setLoading","_Fragment","onSubmit","event","query","preventDefault","fetch","concat","then","res","json","catch","Response","Error","serverData","mov","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","some","prevState","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47f43782.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  addMovie:(movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [quary, setQuary] = useState('');\n  const [error, setError] = useState<ResponseError | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleGetResponseFromServer = (\n    event: React.FormEvent<HTMLFormElement>,\n  ) => {\n    event.preventDefault();\n    setLoading(true);\n\n    getMovie(quary).then(serverData => {\n      if ('Response' in serverData && serverData.Response === 'False') {\n        setError(serverData);\n      } else {\n        setMovie(() => {\n          const mov = serverData as MovieData;\n          const movieObject: Movie = {\n            title: mov.Title,\n            description: mov.Plot,\n            imgUrl: mov.Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : mov.Poster,\n            imdbUrl: `https://www.imdb.com/title/${mov.imdbID}`,\n            imdbId: mov.imdbID,\n          };\n\n          return movieObject;\n        });\n      }\n    })\n      .finally(() => setLoading(false));\n  };\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuary(event.target.value);\n    setError(null);\n  };\n\n  const handleAddMovieButton = () => {\n    if (movie) {\n      addMovie(movie);\n    }\n\n    setMovie(null);\n    setQuary('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleGetResponseFromServer}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': error,\n              })}\n              value={quary}\n              onChange={handleChangeInput}\n            />\n          </div>\n\n          {error\n          && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': loading,\n              })}\n              disabled={!quary}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {!!movie\n          && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovieButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {!!movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=fc00f2c6';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie): void => {\n    if (movies.some(({ imdbId }) => imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies(prevState => [...prevState, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}